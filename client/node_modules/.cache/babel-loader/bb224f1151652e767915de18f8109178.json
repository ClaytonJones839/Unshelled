{"ast":null,"code":"import { __assign } from 'tslib';\nimport React from 'react';\nimport { getApolloContext } from '@apollo/react-common';\nimport { RenderPromises } from '@apollo/react-hooks';\n\nfunction getDataFromTree(tree, context) {\n  if (context === void 0) {\n    context = {};\n  }\n\n  return getMarkupFromTree({\n    tree: tree,\n    context: context,\n    renderFunction: require('react-dom/server').renderToStaticMarkup\n  });\n}\n\nfunction getMarkupFromTree(_a) {\n  var tree = _a.tree,\n      _b = _a.context,\n      context = _b === void 0 ? {} : _b,\n      _c = _a.renderFunction,\n      renderFunction = _c === void 0 ? require('react-dom/server').renderToStaticMarkup : _c;\n  var renderPromises = new RenderPromises();\n\n  function process() {\n    var ApolloContext = getApolloContext();\n    var html = renderFunction(React.createElement(ApolloContext.Provider, {\n      value: __assign({}, context, {\n        renderPromises: renderPromises\n      })\n    }, tree));\n    return renderPromises.hasPromises() ? renderPromises.consumeAndAwaitPromises().then(process) : html;\n  }\n\n  return Promise.resolve().then(process);\n}\n\nfunction renderToStringWithData(component) {\n  return getMarkupFromTree({\n    tree: component,\n    renderFunction: require('react-dom/server').renderToString\n  });\n}\n\nexport { getDataFromTree, getMarkupFromTree, renderToStringWithData };","map":null,"metadata":{},"sourceType":"module"}