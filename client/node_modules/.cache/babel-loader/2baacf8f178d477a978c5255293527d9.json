{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/clay/Desktop/Unshelled/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation RegisterUser($name: String!, $email: String!, $password: String!) {\\n    register(username: $username, email: $email, password: $password), firstName: $firstName{\\n      token\\n      loggedIn\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation VerifyUser($token: String!) {\\n    verifyUser(token: $token) {\\n      loggedIn\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation LoginUser($email: String!, $password: String!) {\\n    login(email: $email, password: $password) {\\n      token\\n      loggedIn\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nexport default {\n  LOGIN_USER: gql(_templateObject()),\n  VERIFY_USER: gql(_templateObject2()),\n  REGISTER_USER: gql(_templateObject3())\n};","map":{"version":3,"sources":["/Users/clay/Desktop/Unshelled/client/src/graphql/mutations.js"],"names":["gql","LOGIN_USER","VERIFY_USER","REGISTER_USER"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,eAAe;AACbC,EAAAA,UAAU,EAAED,GAAF,mBADG;AASfE,EAAAA,WAAW,EAAEF,GAAF,oBATI;AAiBfG,EAAAA,aAAa,EAAEH,GAAF;AAjBE,CAAf","sourcesContent":["import gql from \"graphql-tag\";\n\nexport default {\n  LOGIN_USER: gql`\n  mutation LoginUser($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      loggedIn\n    }\n  }\n`,\nVERIFY_USER: gql`\n  mutation VerifyUser($token: String!) {\n    verifyUser(token: $token) {\n      loggedIn\n    }\n  }\n`,\n \nREGISTER_USER: gql`\n  mutation RegisterUser($name: String!, $email: String!, $password: String!) {\n    register(username: $username, email: $email, password: $password), firstName: $firstName{\n      token\n      loggedIn\n    }\n  }\n`,\n}"]},"metadata":{},"sourceType":"module"}